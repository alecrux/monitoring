version: '2.2'

volumes:
    prometheus_data: {}
    loki_data: {}
    grafana_data: {}

networks:
  monitoring:
    driver: bridge

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
    environment:
      - config.file=/home/ubuntu/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - monitoring
    restart: always

  loki:
    image: grafana/loki
    container_name: loki
    volumes:
      - ./loki/:/etc/loki/
      - loki_data:/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring
    restart: always

  promtail:
    image: grafana/promtail
    container_name: promtail
    volumes:
      - ./promtail/:/etc/promtail/
      - /var/log:/var/log/syslog
    command: -config.file=/etc/promtail/docker-config.yaml
    networks:
      - monitoring
    restart: always

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    hostname: docker-server
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - monitoring
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
      - loki
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - ./grafana/config.monitoring
    networks:
      - monitoring
    restart: always

